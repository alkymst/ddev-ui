defaults: &defaults
  macos:
    xcode: "10.0.0"
  environment:
    ARTIFACTS: /artifacts
  working_directory: ~/ddev-ui

aliases:
  - &restore_source
    restore_cache:
      keys:
        - v2-source-{{ .Branch }}-{{ .Revision }}
        - v2-source-{{ .Branch }}-

  - &restore_brew
    restore_cache:
      keys:
        - v2-homebrew-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
        - v2-homebrew-{{ .Branch }}-
  # - run: brew update
  # Yarn setup
  - &restore_yarn
    restore_cache:
      keys:
        - v2-yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
        - v2-yarn-packages-{{ .Branch }}-

version: 2.0
jobs:
  build:
    <<: *defaults
    steps:
      # Checkout the codebase
      - *restore_source
      - checkout
      - save_cache:
          key: v2-source-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
            - ~/ddev-ui

      # Homebrew Setup
      - *restore_brew
      - run: brew update
      - run:
          name: Homebrew install of rpm
          command: brew install rpm
      ## save cache
      - save_cache:
          key: v2-homebrew-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /usr/local/Cellar/rpm

      # build app dependancies
      ## yarn install
      - *restore_yarn
      - run:
          name: Yarn Install
          command: yarn install
      ## yarn cache
      - save_cache:
          key: v2-yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/ddev-ui/node_modules

      ## echo installed tools
      - run:
          name: Installed tool versions
          command: >-
            echo "git commit=$(make version) node version=$(node --version) npm
            version=$(npm --version) wine version=$(wine --version) HOME=$HOME
            USER=$(whoami) PWD=$PWD"

      # build apps
      # - run: make all
      - run: make

  test:
    <<: *defaults
    steps:
      - *restore_source
      - checkout
      - *restore_brew
      - run: brew update
      - *restore_yarn
      - run: yarn install
      # run tests
      - run: make test

  artifacts:
    <<: *defaults
    steps:
      - *restore_source
      - checkout
      - *restore_brew
      - run: brew update
      - *restore_yarn
      - run: yarn install
      - run:
          command: ./.circleci/generate_artifacts.sh $ARTIFACTS
          name: tar/zip up artifacts and make hashes
      - store_artifacts:
          path: /artifacts

  release:
    <<: *defaults
    steps:
      - *restore_source
      - checkout
      - *restore_brew
      - run: brew update
      - *restore_yarn
      - run: yarn install
      - run: make release-darwin
      # - run: make release

workflows:
  version: 2
  workflow:
    jobs:
      - build
      - test:
          requires:
            - build
      - artifacts:
          requires:
            - build
            - test
          filters:
            branches:
              ignore:
                - master
      - release:
          requires:
            - build
            - test
          filters:
            branches:
              only:
                - master
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - test
